name: Deploy application

on:
  push:
    branches:
      - main

env:
  path: App
  major: 1
  minor: 0

jobs:
  setup:
    name: Set up
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: latest

    - name: Install NPM dependencies
      run: cd ${{ env.path }} && npm ci

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.path }}/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('${{ env.path }}/package-lock.json') }}

  version:
    name: App version
    runs-on: ubuntu-latest

    steps:
    - name: Get last version
      uses: reecetech/version-increment@2023.4.1
      id: version
      with:
        scheme: semver
        increment: patch

    - name: Set new version
      id: app
      run: run: echo "::set-output name=value::${{ env.major }}.${{ env.minor }}.${{ steps.version.outputs.patch-version }}"

    - name: Show version
      run: echo "${{ steps.app.outputs.value }}"

  build:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [setup, version]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: latest

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.path }}/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('${{ env.path }}/package-lock.json') }}

    - name: Set app version
      run: cd ${{ env.path }} && npm pkg set version=1.0.0
    - name: Build code
      run: cd ${{ env.path }} && npm run android:build

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: android
        path: ${{ env.path }}/android/app/build/outputs/apk/release/app-release.apk

    - name: Create release
      uses: actions/create-release@v1
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: Release test
        tag_name: test
        draft: false
        prerelease: false

    - name: Publish release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ env.path }}/android/app/build/outputs/apk/release/app-release.apk
        asset_name: android.apk
        asset_content_type: octet-stream